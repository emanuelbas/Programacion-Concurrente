2. 
Voy a crear una variable global de tipo arreglo, un contador
 y varios procesos concurrentes

arreglo = Array of integer [1..M]
int total = 0
const N

Una primera aproximación podría pensarse como M procesos que
 revisan cada celda del vector en forma concurrente, pero esto 
lleva a un problema, tener demasiados procesos concurrentes 
ocaciona que no todos puedan acceder al recurso, por lo que es
 mejor seccionar el vector en varias partes.. la catidad de 
secciones en que se separa el vector dependerá del problema, 
aca voy a dejar un numero cualquiera. Ademas si la cantidad de
 procesos es muy grande tambien sera util no actualizar la 
variable global a menos de que sea necesario.

Process contador [i:1..4] //Esta notación indica que habra 4 procesos concurrentes y la i puede ser usada
int local = 0
int limiteInferior, limiteSuperior //Asignarles el valor que tendrian segun el proceso
for j=limiteInferior to limiteSuperior
	if arreglo[j] == N then local++
if (local > 0) then <total = total + local>

<> indica que se va a hacer de forma atomica, es decir no puede
pasara que otro proceso se cruze mientras se esta haciendo la
la suma y asignacion
Si no lo usara podria pasar que todos los procesos lean total=0
y se daria algo como esto
P1: 0 + 5
P2: 0 + 3
P3: 0 + 6
P1: total := 5
P2: total := 3
p3: total := 6
-> total = 6 -> Incorrecto

Usando atomicidad:
P1: <total := 0 + 5>
P2: <total := 5 + 3>
P3: <total := 8 + 6>
-> total = 14 -> Correcto